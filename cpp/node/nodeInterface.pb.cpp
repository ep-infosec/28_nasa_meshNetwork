// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nodeInterface.proto

#include "nodeInterface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_nodeInterface_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_nodeInterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Command;
}  // namespace protobuf_nodeInterface_2eproto
namespace nodeInterface {
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class NodeThreadMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeThreadMsg>
      _instance;
} _NodeThreadMsg_default_instance_;
}  // namespace nodeInterface
namespace protobuf_nodeInterface_2eproto {
static void InitDefaultsCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nodeInterface::_Command_default_instance_;
    new (ptr) ::nodeInterface::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nodeInterface::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand}, {}};

static void InitDefaultsNodeThreadMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nodeInterface::_NodeThreadMsg_default_instance_;
    new (ptr) ::nodeInterface::NodeThreadMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nodeInterface::NodeThreadMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeThreadMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeThreadMsg}, {
      &protobuf_nodeInterface_2eproto::scc_info_Command.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeThreadMsg.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::Command, txinterval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::Command, msgbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::Command, cmdid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, cmdrelay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, cmds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, linkstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, rcvdbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nodeInterface::NodeThreadMsg, datablock_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nodeInterface::Command)},
  { 8, -1, sizeof(::nodeInterface::NodeThreadMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::nodeInterface::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nodeInterface::_NodeThreadMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "nodeInterface.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023nodeInterface.proto\022\rnodeInterface\">\n\007"
      "Command\022\022\n\ntxInterval\030\001 \001(\002\022\020\n\010msgBytes\030"
      "\002 \001(\014\022\r\n\005cmdId\030\003 \001(\r\"\357\001\n\rNodeThreadMsg\0226"
      "\n\004type\030\001 \001(\0162(.nodeInterface.NodeThreadM"
      "sg.NodeMsgType\022\021\n\ttimestamp\030\002 \001(\001\022\020\n\010cmd"
      "Relay\030\003 \001(\014\022$\n\004cmds\030\004 \003(\0132\026.nodeInterfac"
      "e.Command\022\022\n\nlinkStatus\030\005 \003(\r\022\021\n\trcvdByt"
      "es\030\006 \001(\014\022\021\n\tdataBlock\030\007 \001(\014\"!\n\013NodeMsgTy"
      "pe\022\010\n\004NODE\020\000\022\010\n\004COMM\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nodeInterface.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_nodeInterface_2eproto
namespace nodeInterface {
const ::google::protobuf::EnumDescriptor* NodeThreadMsg_NodeMsgType_descriptor() {
  protobuf_nodeInterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nodeInterface_2eproto::file_level_enum_descriptors[0];
}
bool NodeThreadMsg_NodeMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodeThreadMsg_NodeMsgType NodeThreadMsg::NODE;
const NodeThreadMsg_NodeMsgType NodeThreadMsg::COMM;
const NodeThreadMsg_NodeMsgType NodeThreadMsg::NodeMsgType_MIN;
const NodeThreadMsg_NodeMsgType NodeThreadMsg::NodeMsgType_MAX;
const int NodeThreadMsg::NodeMsgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kTxIntervalFieldNumber;
const int Command::kMsgBytesFieldNumber;
const int Command::kCmdIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_nodeInterface_2eproto::scc_info_Command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nodeInterface.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgbytes().size() > 0) {
    msgbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbytes_);
  }
  ::memcpy(&txinterval_, &from.txinterval_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmdid_) -
    reinterpret_cast<char*>(&txinterval_)) + sizeof(cmdid_));
  // @@protoc_insertion_point(copy_constructor:nodeInterface.Command)
}

void Command::SharedCtor() {
  msgbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmdid_) -
      reinterpret_cast<char*>(&txinterval_)) + sizeof(cmdid_));
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:nodeInterface.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  msgbytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_nodeInterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nodeInterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_nodeInterface_2eproto::scc_info_Command.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:nodeInterface.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txinterval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmdid_) -
      reinterpret_cast<char*>(&txinterval_)) + sizeof(cmdid_));
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nodeInterface.Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float txInterval = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &txinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgBytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cmdId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nodeInterface.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nodeInterface.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nodeInterface.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float txInterval = 1;
  if (this->txinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->txinterval(), output);
  }

  // bytes msgBytes = 2;
  if (this->msgbytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgbytes(), output);
  }

  // uint32 cmdId = 3;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cmdid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nodeInterface.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nodeInterface.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float txInterval = 1;
  if (this->txinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->txinterval(), target);
  }

  // bytes msgBytes = 2;
  if (this->msgbytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgbytes(), target);
  }

  // uint32 cmdId = 3;
  if (this->cmdid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cmdid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nodeInterface.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nodeInterface.Command)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgBytes = 2;
  if (this->msgbytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgbytes());
  }

  // float txInterval = 1;
  if (this->txinterval() != 0) {
    total_size += 1 + 4;
  }

  // uint32 cmdId = 3;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nodeInterface.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nodeInterface.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nodeInterface.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nodeInterface.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgbytes().size() > 0) {

    msgbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbytes_);
  }
  if (from.txinterval() != 0) {
    set_txinterval(from.txinterval());
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nodeInterface.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nodeInterface.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  msgbytes_.Swap(&other->msgbytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(txinterval_, other->txinterval_);
  swap(cmdid_, other->cmdid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_nodeInterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nodeInterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeThreadMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeThreadMsg::kTypeFieldNumber;
const int NodeThreadMsg::kTimestampFieldNumber;
const int NodeThreadMsg::kCmdRelayFieldNumber;
const int NodeThreadMsg::kCmdsFieldNumber;
const int NodeThreadMsg::kLinkStatusFieldNumber;
const int NodeThreadMsg::kRcvdBytesFieldNumber;
const int NodeThreadMsg::kDataBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeThreadMsg::NodeThreadMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_nodeInterface_2eproto::scc_info_NodeThreadMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nodeInterface.NodeThreadMsg)
}
NodeThreadMsg::NodeThreadMsg(const NodeThreadMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cmds_(from.cmds_),
      linkstatus_(from.linkstatus_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmdrelay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmdrelay().size() > 0) {
    cmdrelay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmdrelay_);
  }
  rcvdbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rcvdbytes().size() > 0) {
    rcvdbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rcvdbytes_);
  }
  datablock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datablock().size() > 0) {
    datablock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datablock_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:nodeInterface.NodeThreadMsg)
}

void NodeThreadMsg::SharedCtor() {
  cmdrelay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rcvdbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datablock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
}

NodeThreadMsg::~NodeThreadMsg() {
  // @@protoc_insertion_point(destructor:nodeInterface.NodeThreadMsg)
  SharedDtor();
}

void NodeThreadMsg::SharedDtor() {
  cmdrelay_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rcvdbytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datablock_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeThreadMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeThreadMsg::descriptor() {
  ::protobuf_nodeInterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nodeInterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeThreadMsg& NodeThreadMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_nodeInterface_2eproto::scc_info_NodeThreadMsg.base);
  return *internal_default_instance();
}


void NodeThreadMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:nodeInterface.NodeThreadMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmds_.Clear();
  linkstatus_.Clear();
  cmdrelay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rcvdbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datablock_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool NodeThreadMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nodeInterface.NodeThreadMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .nodeInterface.NodeThreadMsg.NodeMsgType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::nodeInterface::NodeThreadMsg_NodeMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes cmdRelay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cmdrelay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .nodeInterface.Command cmds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cmds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 linkStatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_linkstatus())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_linkstatus())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes rcvdBytes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rcvdbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dataBlock = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datablock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nodeInterface.NodeThreadMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nodeInterface.NodeThreadMsg)
  return false;
#undef DO_
}

void NodeThreadMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nodeInterface.NodeThreadMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nodeInterface.NodeThreadMsg.NodeMsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // double timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->timestamp(), output);
  }

  // bytes cmdRelay = 3;
  if (this->cmdrelay().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->cmdrelay(), output);
  }

  // repeated .nodeInterface.Command cmds = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cmds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->cmds(static_cast<int>(i)),
      output);
  }

  // repeated uint32 linkStatus = 5;
  if (this->linkstatus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _linkstatus_cached_byte_size_));
  }
  for (int i = 0, n = this->linkstatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->linkstatus(i), output);
  }

  // bytes rcvdBytes = 6;
  if (this->rcvdbytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->rcvdbytes(), output);
  }

  // bytes dataBlock = 7;
  if (this->datablock().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->datablock(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nodeInterface.NodeThreadMsg)
}

::google::protobuf::uint8* NodeThreadMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nodeInterface.NodeThreadMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nodeInterface.NodeThreadMsg.NodeMsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // double timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->timestamp(), target);
  }

  // bytes cmdRelay = 3;
  if (this->cmdrelay().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->cmdrelay(), target);
  }

  // repeated .nodeInterface.Command cmds = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cmds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->cmds(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 linkStatus = 5;
  if (this->linkstatus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _linkstatus_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->linkstatus_, target);
  }

  // bytes rcvdBytes = 6;
  if (this->rcvdbytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->rcvdbytes(), target);
  }

  // bytes dataBlock = 7;
  if (this->datablock().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->datablock(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nodeInterface.NodeThreadMsg)
  return target;
}

size_t NodeThreadMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nodeInterface.NodeThreadMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .nodeInterface.Command cmds = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->cmds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cmds(static_cast<int>(i)));
    }
  }

  // repeated uint32 linkStatus = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->linkstatus_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _linkstatus_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes cmdRelay = 3;
  if (this->cmdrelay().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cmdrelay());
  }

  // bytes rcvdBytes = 6;
  if (this->rcvdbytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rcvdbytes());
  }

  // bytes dataBlock = 7;
  if (this->datablock().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datablock());
  }

  // double timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // .nodeInterface.NodeThreadMsg.NodeMsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeThreadMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nodeInterface.NodeThreadMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeThreadMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeThreadMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nodeInterface.NodeThreadMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nodeInterface.NodeThreadMsg)
    MergeFrom(*source);
  }
}

void NodeThreadMsg::MergeFrom(const NodeThreadMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nodeInterface.NodeThreadMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cmds_.MergeFrom(from.cmds_);
  linkstatus_.MergeFrom(from.linkstatus_);
  if (from.cmdrelay().size() > 0) {

    cmdrelay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmdrelay_);
  }
  if (from.rcvdbytes().size() > 0) {

    rcvdbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rcvdbytes_);
  }
  if (from.datablock().size() > 0) {

    datablock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datablock_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void NodeThreadMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nodeInterface.NodeThreadMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeThreadMsg::CopyFrom(const NodeThreadMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nodeInterface.NodeThreadMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeThreadMsg::IsInitialized() const {
  return true;
}

void NodeThreadMsg::Swap(NodeThreadMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeThreadMsg::InternalSwap(NodeThreadMsg* other) {
  using std::swap;
  CastToBase(&cmds_)->InternalSwap(CastToBase(&other->cmds_));
  linkstatus_.InternalSwap(&other->linkstatus_);
  cmdrelay_.Swap(&other->cmdrelay_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rcvdbytes_.Swap(&other->rcvdbytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  datablock_.Swap(&other->datablock_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeThreadMsg::GetMetadata() const {
  protobuf_nodeInterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_nodeInterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nodeInterface
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nodeInterface::Command* Arena::CreateMaybeMessage< ::nodeInterface::Command >(Arena* arena) {
  return Arena::CreateInternal< ::nodeInterface::Command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nodeInterface::NodeThreadMsg* Arena::CreateMaybeMessage< ::nodeInterface::NodeThreadMsg >(Arena* arena) {
  return Arena::CreateInternal< ::nodeInterface::NodeThreadMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
